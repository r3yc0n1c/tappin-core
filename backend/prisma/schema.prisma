generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String              @id @default(cuid())
  email          String              @unique
  name           String
  address        String              @unique
  role           Role                @default(CONTRACTOR)
  hashedPassword String
  passwordSalt   String?
  machines       Machine[]
  oauthAccounts  OAuthAccount[]
  sessions       Session[]
  passwordResets PasswordResetToken?
}

model Machine {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cpu       Int
  ram       Int
  size      Int
  time      Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model OAuthAccount {
  id                String @id @default(cuid())
  provider          String // Provider
  providerAccountId String
  userId            String
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model PasswordResetToken {
  id          String   @id @default(cuid())
  userId      String   @unique
  hashedToken String   @unique
  expiresAt   DateTime
  user        User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum Role {
  PROVIDER
  CONTRACTOR
}
